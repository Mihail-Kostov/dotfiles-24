after using the [planck ortholinear][] keyboard for only a few weeks, 
I am a converted user. Even a 60% keyboard now feels unnecessarily 
large, cumbersome and less ergonomic. 

The ortholinear layout provides left-right hand fingering symmetry, 
whilst the 40% form factor, minimal finger travel. It took very little 
time to develop new finger memory, with the left hand benefiting the 
most from the non-staggered layout.

But it is the programmable QMK firmware that unleashes the beauty of the 
Planck. In the short time with the Planck, the keyboard layouts and 
functionality morphed from my original abstraction to this (and will, no 
doubt, continue to evolve)..

![Planck with Cherry keycaps](/images/planck_with_cherry_keycaps.jpg)

## ortholinear colemak dh

the default [Colemak DH][colemak shift-dh] layout, of course. sans the 
staggered keyboard map shift..

<code>^  <span class='blue'>~</span>    Q    W    F    P    B        J    L    U    Y    <span class='blue'>;    \</span></code>
<code><span class='brown'>Esc</span>    A    R    S    <span class='black'>T</span>    G        M    <span class='black'>N</span>    E    I    O    <span class='brown'>Enter</span></code>
<code>^  <span class='blue'>-</span>    Z    X    C    D    V        K    H    <span class='blue'>,    .    /</span>    <span class='blue'>"</span></code>
<code>^  <span class='brown'>=</span>  <span class='blue'>Ctrl Caps  Alt</span>  <span class='brown'>Tab</span>  SP     BackSP <span class='brown'>Del</span>  <span class='blue'>Left Down  Up</span>   <span class='brown'>Right</span></code>

[ljust]**Grave** and **Quote** are represented by **Tilde** and **Double 
Quote** for readability. And the home row index finger position by the 
black bolded key.

Modifier key actions:

- Grave (down) GUI
- Esc (down) Ctrl
- Minus (down) Shift
- Equal (down) keypad layer
- GUI (tap) toggle Capslock
- Tab (down) symbol layer
- Space (down) Shift
- Backspace (down) Shift
- Delete (down) symbol layer
- Left (down) Alt
- Down (down) GUI
- Up (down) Ctrl
- Apostrophe (down) Shift
- Enter (down) Ctrl
- Backslash (down) GUI
- Tab+Delete (down) navigation layer

[ljust]produces these outer edge modifier keys when held down..

<code><span class='blue'>  GUI</span>  Q    W    F    P    B        J    L    U    Y    <span class='blue'>;    GUI </span></code>
<code><span class='brown'> Ctrl</span>  A    R    S    <span class='black'>T</span>    G        M    <span class='black'>N</span>    E    I    O    <span class='brown'>Ctrl</span></code>
<code><span class='blue'>Shift</span>  Z    X    C    D    V        K    H    <span class='blue'>,    .    /</span>    <span class='blue'>Shift</span></code>
<code><span class='brown'>KPAD</span> <span class='blue'>Ctrl  GUI  Alt</span>  <span class='brown'>SYM</span> Shift    Shift <span class='brown'>SYM</span>  <span class='blue'>Alt  GUI  Ctrl</span>  <span class='brown'>Right</span></code>

The **Ctrl** and **GUI** modifier keys are redundantly added to the 
left and right hand sides for convenient multi-key modifier 
combinations. It looks unnecessarily complicated but, in fact, creating 
layers and double action key functions keeps everything close to the 
home row position and makes for a supremely effective keyboard.

The biggest fingering challenge was adapting to the **Space** and 
**Backspace** as **Shift** key when held down. But thumbs quickly won 
over pinky **Shift** usage once the finger coordination was mastered.

## symbol layer

is toggled from either the left hand **Tab** or right hand **Delete** 
key -- held down together, the navigation layer is enabled. 

Since symbol characters are more frequently used than numerics, the 
symbols, normally **Shift** number, are placed on the home row, with the 
numbers conveniently above and within much closer finger reach than on 
conventional keyboards. Besides, for serious data entry, the hexadecimal 
keypad layer is a toggle away!

For coding convenience, adjacent home row placement of the **Brace** and 
**Curly Bracket** characters is achieved by side placement of the 
function keys **F7** through **F12**. In my case, being right handed, 
these key pairs are placed on the right hand keymap and could easily 
have been relocated to the left hand..

`F10    1    2    3    4    5        6    7    8    9    0    F9`
<code>F11    !    @    #    <span class='black'>$</span>    %        ^^    <span class='black'>&</span>    *    (    )    F8</code>
`F12   F1   F2   F3   F4   F5       F6    [    ]    {    }    F7`
<code>^  =  Ctrl  GUI  Alt  <span class='brown'>-- </span>  SP     BackSP <span class='brown'> --</span>  <span class='blue'>Home PgDn PgUp</span>  <span class='brown'>End</span></code>

Furthermore, the Planck firmware is coded to autocomplete the *left* 
**Parenthesis**, **Brace** or **Curly Bracket** with its *right* 
character pair when double tapped -- just as the [Vim][grokking vim] 
editor provides. How cool is that!

## keypad layer

extended hexadecimal keypad section with the escape adjustment layer 
toggle..

<code>^  ~    Q    W    F    P    <span class='brown'>E        F    7    8    9    -</span>    \</code>
<code><span class='brown'>ADJUST</span> A    R    S    <span class='black'>T</span>    <span class='brown'>C        D    4    5    6    +</span>    Enter</code>
<code>^  =    Z    X    C    D    <span class='brown'>A        B    1    2    3    =</span>    "</code>
<code>^ <span class='brown'>--</span>  Ctrl  GUI  Alt  Tab  <span class='brown'> (        )    0    .    /    *</span>    Right</code>

The beauty of flashing your own firmware.

## navigation layer

left plus right hand thumb activated navigation cluster with convenient 
home row **GUI**, **Ctrl** and **Shift** modifier keys..

<code>F10    1    2    3    4    5       <span class='brown'>Bsp  Home  Up  End</span>   0    F9</code>
<code>F11    !   <span class='brown'>GUI Ctrl Shift</span>  %       <span class='brown'>Del  Left Down Right</span> )    F8</code>
<code>F12   F1   F2   F3   F4   F5       F6   <span class='brown'>PgDn PgUp</span>  {    }    F7</code>
<code>^  =  Ctrl  GUI  Alt  <span class='brown'>--</span>   SP     BackSP <span class='brown'> --</span>  Left Down  Up   Right</code>

Because the navigation layer is raised with the left and right symbol 
layer keys, the symbol keys occupy the remainder of the keyboard. These 
unrelated layer keys in this, the keypad and adjustment layers are 
actually made non-operable to avoid unexpected keystrokes and are only 
listed as visual placeholders. 

## adjustment layer

is toggled from the keypad layer to prevent accidental but convenient 
access for reflashing the Planck keyboard firmware and selecting 
differend keyboard layouts..

<code>^  ~  <span class='blue'>Reset</span>  W    F    P    B        J    L    U    Y    ;    \</code>
<code>^ <span class='brown'>--</span>    A    R    S    <span class='black'>T</span>    G        M   <span class='blue'>CMK  QTY  DVK  PLV</span>   Enter</code>
<code>^  -    Z    X    C    D    V        K    H    ,    .    /    "</code>
<code>^  =  Ctrl  GUI  Alt  Tab  SP     BackSP Del  Left Down  Up   Right</code>

Alternate keyboard layouts can be toggled for demoing 
the keyboard, not their utility (or inferiority :-)..

- the superior! Colemak DH (default or home layer)
- QWERTY
- Dvorak
- Plover (steno)

## qwerty

<code>^  <span class='blue'>~</span>    Q    W    E    R    T        Y    U    I    O    P    <span class='blue'>\</span></code>
<code><span class='brown'>Esc</span>    A    S    D    <span class='black'>F</span>    G        H    <span class='black'>J</span>    K    L    <span class='blue'>;</span>    <span class='brown'>Enter</span></code>
<code>^  <span class='blue'>-</span>    Z    X    C    V    B        N    M    <span class='blue'>,    .    /    "</span></code>
<code><span class='brown'>^  =</span>  <span class='blue'>Ctrl  GUI  Alt</span>  <span class='brown'>Tab</span>  SP     BackSP <span class='brown'>Del</span>  <span class='blue'>Left Down  Up</span>   <span class='brown'>Right</span></code>

## dvorak

<code>^  <span class='blue'>~    "    ,    .</span>    P    Y        F    G    C    R    L    <span class='blue'>/</span></code>
<code><span class='brown'>Esc</span>    A    O    E    <span 
class='black'>U</span>    I        D    <span class='black'>H</span>    T    N    S    <span class='brown'>Enter</span></code>
<code>^  <span class='blue'>-    ;</span>    Q    J    K    X        B    M    W    V    Z    <span class='blue'>-</span></code>
<code><span class='brown'>^  =</span>  <span class='blue'>Ctrl  GUI  Alt</span>  <span class='brown'>Tab</span>  SP     BackSP <span class='brown'>Del</span>  <span class='blue'>Left Down  Up</span>   <span class='brown'>Right</span></code>

## plover

is a stenography application which transposes QWERTY layout multi-key 
chords to words versus sequential key (finger) input, facilitating  
typing speeds in excess of 200 words per minute!..

<code>^  1    <span class='blue'>1    1    1    1</span>    1        1    <span class='blue'>1    1    1    1    1</span></code>
<code>Esc    <span class='blue'>Q    W    E    R</span>    T        Y    <span class='blue'>U    I    O    P    [</span></code>
<code>^  -    <span class='blue'>A    S    D    F</span>    G        H    <span class='blue'>J    Z    L    ;    "</span></code>
<code><span class='brown'>Exit</span> Ctrl  GUI   <span class='blue'>C    V</span>   SP     BackSP  <span class='blue'>N    M</span>   Down  Up   Right</code>

The Plover software actually remaps the partial QWERTY layout into 19 
distinct characters (with many characters replicated on both sides)! 
Learning the phonetic chording, as well as, typing in chords like 
a piano versus spelling out words, is a significant departure from 
conventional typing.

It has a distinctly different rhythm and feel. And takes months to 
master to even a basic level.

## steno build

the Planck with Mathias Red (light) Alps linear switches and 3D printed 
flat steno keycaps for use with the 
[Plover](http://www.openstenoproject.org/plover/) stenography software..

![planck steno with 3D keycaps](/images/planck_steno_with_3D_keycaps.jpg)

