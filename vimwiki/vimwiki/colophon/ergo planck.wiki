it wasn't long after settling on the [wide Planck layout][wide planck 
form] for a time, that a number of thoughts and observations came to 
mind (with input and inspiration from the Colemak community, ever in 
pursuit of perfection).

![Split Planck with cherry profile keys](/images/planck-ergo-cherry.jpg)

Most glaring was the index finger reach to the centre columns for the 
non-alpha characters which required either stretching the fingers out or 
shifting the hand position itself towards the center (and then back to 
the home row position). I was loathe to do the latter, though, many fast 
typists do just that, especially with the QWERTY layout. And it would 
have taken time to develop the finger memory for that reach, given the 
frequency of usage for those keys.

Secondly, the outer modifier keys, as typing speed improved with the 
wide layout, suffered from the same unintended modifier actions the 
**A** and **O** keys exhibited before their modifier attributes were 
disabled. 

Thirdly, the downward right pinkie extension felt wasted on the **Up** 
cursor key. 

And last but not least, the left hand *symbol layer* felt ever so 
slightly off, not being a fingering mirror of the right hand *number 
layer* numeric keypad assignments. I can only put this forward as an 
internal neural wiring issue with me.

## legend

finally! colour codes for the keyboard layout maps below..

![Keyboard layout legend](/images/keyboard-layout-ergo-legend.jpg)

## split layout

by relaxing the criteria to have all standard non-alphabetic keys 
available on the default layer, and judiciously mapping the centre 
column symbol keys to other layers, the centre column can then be 
programmed with dedicated modifier key chords, eliminating the false 
triggering problem inherent in the original [wide Planck layout][wide planck form]. 

Presto, three issues addressed with the cursor cluster returning to 
a more familiar layout..

![Split Colemak DH layout](/images/keyboard-layout-ergo-colemak.jpg)

The **Backspace** loses its former thumb placement to the **Enter** key 
for a more fluid end of sentence **Enter** **Shift** double tap thumb 
sequence, but is still easily accessible by the thumb -- the average 
touch typist that I am. Win win.

While not a two piece ergonomic keyboard, the centre two columns of 
modifier keys effectively create a split layout with its home row 
separation. Thus, this diminutive Planck is now wider than a standard 
keyboard in its physical hand placement -- much like the Microsoft 
ergonomic keyboard designs without the QWERTY pinkie extensions! With 
its robust single piece construction, compactness and efficient home row 
layers, I feel less inclined to seek out two piece split keyboards (for) 
now!

## shift shift

the left **Space** and right **Enter** shift keys are redefined as 
actual layer toggle keys instead of as modifiers. What this allows is 
mapping the **Slash** and **Grave** key values to the **Comma** and 
**Dot** key locations which are conveniently available because the 
lesser used **&lt;** and **&gt;** characters are redundantly defined on 
the *symbol* and *number* layers..

![Split shift layout](/images/keyboard-layout-ergo-shift.jpg)

Note that the **Minus** and **Underscore** characters deftly occupy the 
opposite **Shift** key location of each *shift layer*, easily tapped by 
the thumb! **Left Shift** conveniently raises the **Backspace** key to 
**Delete**. The devil in the details!

No more pinkie extensions (and index finger reaches)!

## navigation plus

the full navigation layer cluster with modifiers is now raised with 
a single thumb key..

![Split navigation layout](/images/keyboard-layout-ergo-cursor.jpg)

[ljust]and provides a shortcut to the **Plus** sign which is neatly 
overlaid the *shift* layer **Minus** sign. 

Looking at the layers three dimensionally, this approach is used to 
define easily remembered overlay key relationships -- at least, in 
accordance, with how this mind works! This is the driver for the many 
layer iterations to both refine finger movement and aid finger memory.

## mirror mirror

the *number layer* moves the simple mathematical operators from the left 
hand to the right hand keypad overlay (similar to numeric keypads), 
switching the angle brackets to the left hand to complete the symbol 
pair groupings..

![Mirrored number layer](/images/keyboard-layout-mirror-number.jpg)

[ljust]The double tap keys (purple) are not tied to the overlay layer. 
Quickly double tapping the key inserts the cursor between the symbol 
pair.

The left hand *symbol layer* is adjusted to mirror the right hand *number layer* keypad shift values. This just
feels more synaptically correct and natural (to me).. 

![Mirrored symbol layer](/images/keyboard-layout-mirror-symbol.jpg)

The overlays (in pink) for the *symbol* and *number* layers are defined to minimize the 
need to shift between these two layers and the default layer during the construction of complex regex 
and numeric expressions. Purely a convenience but easily programmed into the firmware.

## adjustment layer

the adjustment layer sets various keyboard modes (specific to the Planck 
hardware)..

![Adjustment and macro layer](/images/keyboard-layout-ergo-adjust.jpg)

[ljust]and the newly added *macro* layer provides dynamic recording and 
playback of entered strings. A handy feature.

Now to see how these changes weather the test of time..

## function key layer

not long apparently! Remembering (after a hiatus) the [GuiFn][poker 
2#guifn] single handed navigation cluster of my long retired Poker 2, it 
made sense to swap the function key and cursor key clusters of the 
*symbol* and *navigation* layers, so that the navigation cluster can now 
be conveniently accessed with just the right hand and the *symbol* 
layer.

With this simple change we now have..

![Colemak default layer](/images/keyboard-layout-colemak-fn.jpg)

![Symbol navigation layer](/images/keyboard-layout-symbol-nav.jpg)

![Function key layer](/images/keyboard-layout-fnkeys.jpg)


