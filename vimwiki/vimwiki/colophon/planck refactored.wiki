![Planck with SA profile keycaps](/images/planck_sa_keycaps.jpg)

[ljust]it didn't take long to publish my original Planck layouts and 
then do some rethinking about the 
[hexadecimal keypad][plancked#hexadecimal-keypad] and the 
[symbol][plancked#symbol-layer] layers. Writing will do that..

![Colemak DH](/images/keyboard_layout_colemak_dh.jpg)

## modifiers

the outer left, right and bottom row keys double as modifier and layer 
toggle keys when held down. This is how such a diminutive keyboard can 
retain the functionality of a full sized keyboard.

I mused that i needed to add another Planck layer to impart symmetry to 
the [modifier key][plancked#modifiers] assignments, for which the 
**Right** cursor key had no assignment in my original layout 
configurations. Instead, removing the left corner key 
[*keypad* toggle][plancked#hexadecimal-keypad] and revisiting the 
*symbol layer* would accomplish that (oh so important visual symmetry! 
:-)..

![Modifiers](/images/keyboard_layout_number_symbol_modifiers.jpg)

[ljust]Holding down the layer toggling keys, highlighted in pink, raises 
the associated keyboard layers described below.

## number layer

redesigning the hexadecimal keypad cluster and taking a page from the 
*navigation cluster* to assign the keypad operators to the left hand, 
sequences of numbers can now be typed without needing to alternate hands 
(as would be necessary with a conventional number row which spans the 
left and right hands)..

![Hexadecimal cluster](/images/keyboard_layout_number_layer.jpg)

Special symbols with the left hand allow constructing arithmetic 
expressions and numeric arrays (as defined in programming). Note, that 
the **Curly Bracket**, **Parenthesis** and **Square Bracket** keys 
retain their position in the *symbol layer*.

## symbol layer

the *symbol layer* now also becomes a cluster, with the *function keys* 
easily available to the right hand. Fifteen function keys can be 
defined, if required..

![Symbol and function key 
cluster](/images/keyboard_layout_symbol_layer.jpg)

The symbols map for the left hand, the same order as the shifted *number 
cluster* for the right, as defined for the *number layer*. Note the left 
hand modifiers for right hand function key combinations.

The **Caps Lock** key was previously defined as the lower left **GUI** 
key of the default *Colemak layer*. Relocating it to the symbol layer to 
allow toggling with the left thumb **Shift** (most logical!), prevents 
accidental toggling on the default layer.

Additional keys **Plus**, **Dot** and **Backslash** are included for 
constructing *regular expressions* from the symbol layer. While 
seemingly full, the layout is easy to remember because of the core 
mirrored symmetry to the number layer and grouping of symbol pairs.

## navigation layer

the *navigation cluster* retains the same layout as defined earlier but 
is now enabled by holding down both the **Num** and **Sym** keys 
simultaneously..

![Navigation 
cluster](/images/keyboard_layout_navigation_layer_adjust.jpg)

The *Adjust* key toggles the adjustment layer (not shown) for switching 
between keyboard layouts -- Colemak, QWERTY, Dvorak, Plover, etc. -- and 
setting other Planck features (audio, music, LEDs). Placement on the 
navigation layer insures against inadvertant reset or layout 
configuration of the Planck keyboard.

## one shot modifiers

 the *Colemak layer* bottom row **Ctrl**, **GUI**, **Alt**, and the 
 *symbol* and *navigation* layers' left hand **GUI**, **Ctrl**, 
 **Shift** modifier clusters, are configured as *one shot* modifiers, 
 highlighted in cyan. What this means is that, the modifier action is 
 enabled by either holding down the key or, for *one shot*, by tapping 
 the key which applies the modifier action to the next key stroke.. 

![Colemak DH](/images/keyboard_layout_colemak_dh.jpg)

The one shot action is particularly useful for splitting awkward 
multi-key chords, often comprised of two or more modifiers plus key, 
into more convenient two stroke key press progressions by pressing one 
modifier and completing the remainder of the chord with the next key 
stroke. Some find the one shot action so comfortable, they apply it to 
the **Shift** key! One shot modifiers are not available AFAIK on 
non-programmable (firmware) keyboards. 

One shots are defined on the *navigation layer* only because it is 
ridiculously easy to do so (programmatically). The left hand ring, 
middle and index fingers can easily depress all three keys at once but 
there is no cost to configure it for the potential convenience -- a one 
shot can be triggered as the last action on the layer and completed on 
the next layer if you think ahead..

![Navigation 
cluster](/images/keyboard_layout_navigation_layer_one_shot.jpg)

## double tap keys

the symbol and number layers utilize *double tap* keys, highlighted in 
purple, for the *left* **Curly Bracket**, **Parenthesis**, and **Square 
Bracket** keys. The double tap action for these keys automatically 
completes the symbol pair by adding the corresponding *right* character 
whilst repositioning the cursor between the symbol pair, a la vim 
editor, saving a lateral finger and cursor movement -- how cool is 
that!..

![Symbol and function key 
cluster](/images/keyboard_layout_symbol_layer_tap_keys.jpg)

The **Backslash** when double tapped inserts the vertical **Bar** 
character, saving a **Shift** key reach. The **Backslash** on the 
*symbol* layer is a convenience for *escaping* special symbols that have 
meaning in *regular expressions* used in programming. Similarly, with 
a twist, the **Asterix** key when double tapped inserts a **Question 
Mark**, which defines a more restrictive iteration than asterix in 
regular expressions -- all very easy to remember.

The number layer furthers the use of the double tap, by providing the 
corresponding shift number symbol values. As a further convenience, the 
hexadecimal **E** and **F** keys provide the **Colon** and **Bar** of 
their respective default Colemak shift **Semicolon** and **Backslash** 
key positions. Together, this allows constructing various numeric and 
bitwise expressions from the number layer without need for switching 
layers or depressing the **Shift** key!

![Hexadecimal 
cluster](/images/keyboard_layout_number_layer_tap_keys.jpg)

The number and symbol layers, one shot and double tap keys, reflect my 
particular writing needs. That, along with the ortholinear layout of the 
physical keys, is what makes the Planck a superior keyboard IMO.

We'll see how long this configuration weathers usage. Keeping this web 
page up to date requires more effort than customizing the Planck 
firmware! Short of a major rethink of how a layout should work for me, 
I think I am pretty close to my perfect keyboard..
