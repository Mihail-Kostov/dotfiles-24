#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Hardware
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ................................................................. Splitography

usage() {
  echo "usage: $(basename $0) <keymap>  [steno [nomouse]]  [<string>] [dfu]"
  exit 1
}

KEYMAPS='DEFAULT'

ROOT=$HOME
# ROOT=/net/depot
QMK=$ROOT/qmk_firmware
SPLITOGRAPHY=$QMK/keyboards/splitography
KEYMAP=$SPLITOGRAPHY/keymaps/$1
CONFIG=$KEYMAP/config.h
MAKEFILE=$KEYMAP/Makefile
PRIVATE=$KEYMAP/private_string.h

# gcc #include
CPATH=$KEYMAP/common

[ $1 ] || usage
keymap=$1
shift

if ! ifno 'sync qmk_firmware repo' ;then
  cd $QMK
  git pull
fi

# update keymap from stow repo
mkdir -p $KEYMAP 2>/dev/null
cp -f $HOME/stow/splitography/${SPLITOGRAPHY#$ROOT/}/* $SPLITOGRAPHY/ 2>/dev/null
cp -f $HOME/stow/splitography/${KEYMAP#$ROOT/}/* $KEYMAP/

# steno (mouse may need to be mandisabled in config.h)
if [ "$1" = steno ] ;then
  sed -i -e '/STENO_ENABLE/s/= no /= yes/' $MAKEFILE
  shift
  [ "$1" = nomouse ] && { sed -i -e '/MOUSEKEY_ENABLE/s/= yes/= no /' $MAKEFILE ; shift ;}
else
  sed -i -e '/STENO_ENABLE/s/= yes/= no /' $MAKEFILE
fi

# compile time macro sting
grep -q PRIVATE_STRING $CONFIG || sed -i '$a#define PRIVATE_STRING' $CONFIG
case $1 in
  '' |\
  dfu) sed -i 's|.*PRIVATE_STRING|// #define PRIVATE_STRING|' $CONFIG ;;

  *  ) trap "rm -f $PRIVATE" EXIT
       sed -i 's/.*PRIVATE_STRING/#define PRIVATE_STRING/' $CONFIG
       echo "SEND_STRING(\"$1\");" >$PRIVATE
       shift ;;
esac

cd $QMK
sudo make splitography:$keymap:clean
[ "$1" = dfu ] && sudo make splitography:$keymap:dfu || sudo make splitography:$keymap
sudo chown -R $USER:users $QMK

# vim: set ft=sh: #
