#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Sysadmin
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ${_colors_} defined in env

# .......................................................................... Git

usage() {
  echo "usage: $(basename $0)  <comment> | add <path/filespec> | comment [<comment>] | edit | ignore | init | list | undo | rm <dir>"
  exit 1
}

# update github dotfiles
# see .gitignore, to remove items from remote repository
# git rm --cached <filespec>
# git rm --cached -r <dir>
dotfiles="alot \
          amphetype \
          astroid \
          bash \
          bin \
          bspwm \
          build \
          byobu \
          compton \
          conky \
          dunst \
          fish \
          herbstluftwm \
          infinality \
          luakit \
          mpd \
          mpv \
          music \
          notion \
          qutebrowser \
          README.md \
          sxhkd \
          tt-rss \
          vim \
          vimb \
          weechat \
          X11 \
          xmonad \
          wyrd \
          zsh \
"

cd $HOME/stow
# syncthing housekeeping
find . -name '*.sync-conflict-*' -exec rm -f {} \;
find . -name '*.syncthing.hsts.tmp' -exec rm -f {} \;

for i in $dotfiles
do
  git add -v $i
done

commit() {
  echo
  git commit -m "$DESC"
  git push --force --set-upstream origin master
}

pending() {
  echo '..'
  git diff --name-only HEAD | tee
}
set -x
if [ "$*" ] ;then
  case "$1" in
    h) usage ;;

    add) shift
         [ "$*" ] && git add -f $@ ;;

    comment | amend) shift
                     DESC="$@"
                     [ "$DESC" ] && git commit --amend --no-edit --message="$DESC" \
                              || git commit --amend ;;

    edit | ignore) gvim .gitignore ;;

    init) git init
          git add README.md
          git commit -m "refresh commit"
          git remote add origin https://github.com/sdothum/dotfiles.git
          git push -u origin master
          git remote set-url origin git@github.com:sdothum/dotfiles.git ;;

    list | log) git log --oneline | nl -v0 | sed 's/^ \+/&HEAD~/' | less ;;

    undo | redo | reset) git reset --soft HEAD~
                         dotfiles ;;

    rm) shift
        if [ "$*" ] ;then
          git rm -r --cached $@
          git commit -m "Remove directory \"$@\""
          git push origin master
        fi ;;

    *) pending
       if if-yes "commit \"$@\"" ;then
         DESC="$@"
         commit
       fi ;;
  esac
else
  pending
  underline
  printf "commit? [abort]/comment.. : ${_YELLOW_}"
  read DESC
  printf "${_nocolor_}"
  [ "$DESC" ] && commit
fi
cd - >/dev/null

# vim: set ft=sh: #
