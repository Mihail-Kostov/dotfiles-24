#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Dev
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ${_colors_} defined in env

# .......................................................................... Git

usage() {
  echo "usage: $(basename $0) [<stowdir>..] | add <path/filespec>.. | comment [<comment>] | edit | ignore | init | list | log | undo | rm <dir>"
  exit 1
}

# update github dotfiles
# see .gitignore, to remove items from remote repository
# git rm --cached <filespec>
# git rm --cached -r <dir>
dotfiles="amphetype    \
          bash         \
          bin          \
          bspwm        \
          build        \
          compton      \
          conky        \
          fish         \
          herbstluftwm \
          README.md    \
          sxhkd        \
          tt-rss       \
          vim          \
          zsh          \
"

cd $HOME/stow
# syncthing housekeeping
find -name '*.sync-conflict-*' -exec rm -f {} \;
find -name '*.syncthing.hsts.tmp' -exec rm -f {} \;

commit() {
  echo
  git commit --message="$DESC"
  git push --force --set-upstream origin master
}

pending() {
  underline
  printf "commit? [Abort]/comment.. : ${_YELLOW_}"
  read DESC
  printf "${_nocolor_}"
  [ "$DESC" ] && commit
}

# any updates to push?
# changes=$(git diff --name-only)
# [ -z "$changes" ] && [ -z $1 ] && exit
# [ "$changes" ] && echo "$changes"

# $@ substitution within complex expressions is more predictably handled by var substitution
unset pending
case $1 in
  '') for i in $dotfiles
      do
        git add -v $i
      done
      pending ;;

  add) shift
       for i in $@
       do
         if [ -e $i ] ;then
           git add -fv $i
           pending=true
         else
           usage
         fi
       done
       [ $pending ] && pending ;;

  comment | amend)
            shift
            DESC=$@
            [ "$DESC" ] && git commit --amend --no-edit --message="$DESC" ||
                           git commit --amend ;;

  edit | ignore) gvim .gitignore ;;
  help         ) usage ;;

  init) git init
        git add README.md
        git commit --message="refresh commit"
        git remote add origin https://github.com/sdothum/dotfiles.git
        git push -u origin master
        git remote set-url origin git@github.com:sdothum/dotfiles.git ;;

  list) git log --oneline | nl -v0 | sed 's/^ \+/&HEAD~/' | less ;;
  log ) git log | less ;;

  undo | redo | reset)
         git reset --soft HEAD~
         dotfiles ;;

  rm) shift
      if [ $1 ] ;then
        DESC=$@
        git rm -r --cached $DESC
        git commit --message="Remove directory \"$DESC\""
        git push origin master
      fi ;;

  *) for i in $@
     do
       if [ -e $i ] ;then
         git add -v $i
         pending=true
       else
         usage
       fi
     done
     [ $pending ] && pending ;;
esac

# vim: set ft=sh: #
