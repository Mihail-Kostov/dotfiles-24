# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ........................................................................ Notes

# Usage: dmenu notes [<extension>] [<path>]

while :
do
  case $1 in
    '') break ;;

    */*) FOLDER=$1
         shift ;;

    *) ext=$1
       shift ;;
  esac
done
NOTES=/tmp/dmenu:notes:$ext

# housekeeping
[ $ext ] || ext=note
if [ -z $FOLDER ] ;then
  case $ext in
    note ) FOLDER=$HOME/notes ;;
    draft) FOLDER=$HOME/drafts ;;
    *    ) FOLDER=$HOME/tmp ;;
  esac
fi
catlg=$FOLDER/.${ext}s
[ -e $FOLDER ] || mkdir -p $FOLDER

if [ $ext = draft ] ;then
  NEW='[ new   ]'
  EDIT='[ edit  ]'
  PURGE='[ purge ]'
  PROMPT="$NEW\n$EDIT\n$PURGE"
  offset=1
else
  NEW='[ new  ]'
  EDIT='[ edit ]'
  PROMPT="$NEW\n$EDIT"
  offset=0
fi

# first descriptive line of file, mail subject line special case
hint() {
  hint=$(grep '^Subject:' $1)
  [ "$hint" ] || hint=$(grep '[[:alpha:]]' $1 | head -1)
  echo "$hint"
}

# list of files
notes() {
  count=0
  files=$(find -L $FOLDER -name "*.$ext")
  rm -f $NOTES
  if [ "$files" ] ;then
    for i in $files
    do
      count=$(( $count + 1 )) >/dev/null
      if [ "$search" ] ;then
        egrep -iq "$search" $i || continue
      fi
      echo $i >>$NOTES
      echo "$(stat -c '%n^%y' $i | cut -d: -f1-2)/$count ^$SEP $(hint $i)"
    done | sort
  else
    # empty folder
    echo
  fi
}

# item row
highlight() {
  file=$(previous $catlg)
  notes | grep -qn "$file" && echo $(( $(notes | grep -n "$file" | cut -d: -f1) + $offset )) || echo 0
}

# to present grep'd file list enter:
#   /regex to filter
#   //     to clear filter
search=''
while note=$(notes |
             cut -d^ -f2- |
             sed "1i$PROMPT" |
             column -s^ -t |
             dmenu "$(echo $ext | sed -r 's/./\u&/')" $(highlight)) || exit
do
  case $note in
    /*) search="${note#*/}"
        continue ;;

    "$NEW") file=$(mktemp -p $FOLDER --suffix=.$ext)
            action=edit ;;

    "$EDIT") term $FOLDER MAX STACK WAIT ranger $FOLDER ;;

    "$PURGE") [ -f $NOTES ] && mv $(sort -u $NOTES) /tmp
              search=''
              continue ;;

    *) file=$(notes | grep "$(echo $note | sed "s/ *$SEP */.*$SEP /")" | cut -d^ -f1)
       content=$(notes | grep "$(echo $note | sed "s/ *$SEP */.*$SEP /")" | cut -d^ -f3)
       action=$(echo 'view\nedit\nclipboard\ndelete' | dmenu "${content#* }" -no-custom) ;;
  esac

  case $action in
    view) term "$file" MAX STACK WAIT less $file ;;

    edit) history $catlg $file
          gvim -f -c "set filetype=$ext" -c "set modifiable" $file ;;

    clipboard) gpaste-client add "$file"
               notify 'Ctrl-Alt-V' "$file"
               exit ;;

    delete) mv $file /tmp ;;
  esac
done

# vim: set ft=sh: #
