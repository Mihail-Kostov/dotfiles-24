# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ....................................................................... E-mail

 SEND='[ send         ]'
 EDIT='[ edit drafts  ]'
PURGE='[ purge drafts ]'

# list of potential writing tools, verified by dmenu apps
editors="emacs       \
         focuswriter \
         nano        \
         pyroom      \
         rubyroom    \
         vim         \
         wordgrinder \
"

format_message() {
  # insert 2 line feed characters into reply for vim cursor positioning and spacing
  # note required search order
  if grep -q '^--- Begin forwarded message from ' $1 ;then
    sed -i '/^--- Begin forwarded message from /i\
\
' $1
  elif grep -q '^Excerpts from .* message of ' $1 ;then
    sed -i '/^Excerpts from .* message of /i\
\
' $1
  fi
  # composing new email message needs no blank lines added
}

compose_with() {
  format_message $2
  folded=$(mktemp -p $HOME/drafts)
  $1 $2
  fold -s -w 72 $2 >$folded
  cp $folded $2
  mv $folded $folded.draft
  history compose $editor
}

compose_vim() {
  SHELL=/usr/bin/dash
  format_message $1
  gvim -f -c 'set filetype=mail' $1
  cp $1 $HOME/drafts/${1#/tmp/}.draft
  # cleanup sup mail draft histories
  find $HOME/.vim/backups -name '*tmp*sup.*' -exec sudo rm {} \;
  history compose $editor
}

editor=$(previous compose)
while editor=$(apps "$editors" | sed "1i$SEND\n$EDIT\n$PURGE" | rmenu 'Compose' $editor -no-custom) || exit
do
  case $editor in
    "$SEND") ;;

    "$EDIT") dmenu notes draft
             continue ;;

    "$PURGE") mv $HOME/drafts/alot.*.draft /tmp
              continue ;;

    focuswriter) compose_with focuswriter $1 ;;
    nano       ) compose_with pyroom $1 ;;
    pyroom     ) compose_with pyroom $1 ;;
    rubyroom   ) compose_with rubyroom $1 ;;
    wordgrinder) compose_with wordgrinder $1 ;;
    vim        ) compose_vim $1 ;;
  esac
  exit
done

# vim: set ft=sh: #
