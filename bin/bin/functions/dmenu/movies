# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ....................................................................... Movies

# Usage: dmenu movies [cache] [animation]

# Library structure:
# ../videos
#        ../movies
#               ../title.YEAR.*  (movie)

LAST='[ last watched ]'
NAME='[ sort by name ]'
DATE='[ sort by date ]'

# preload cache option
if [ "$1" = cache ] ;then
  cache=true
  shift
fi

library=${LIBRARY:-/net/media/videos/${1:-movies}}
mytitles=$library/.mytitles
playlist=$library/.playlist
catlg=$CACHEDIR/dmenu:${1:-movies}
# unset debug to remove exit from menu items
debug='\nexit'

# list latest movie additions first
T=t
catlg() {
  cat /dev/null >$catlg
  ls -1$T $library | sed -re 's/\./ /g' -e 's/(.*) ([12][0-9][0-9][0-9])( .*)*/\1  (\2)/' >/tmp/dmenu:movies
  playlist /tmp/dmenu:movies $playlist >$catlg &
}

cache() {
  notify low 'Movies' 'Caching library..'
  # clean up titles
  mytitles $library >>$mytitles
  [ -e $playlist ] || echo >$playlist
  catlg
}

# any new media added?
if [ ! -s $catlg ] || stest -dqr -n $catlg $library ;then
  cache
fi
[ $cache ] && exit

options() {
  grep -q '[^ ]' $playlist && echo "$LAST\\\n[ $(sortlist $T) ]" ||
                              echo "[ $(sortlist $T) ]"
}

while :
do
  # rebuilding catalogue?
  if [ ! -s $catlg ] ;then
    sleep 0.1
    continue
  fi

  # focus monitor menu originally presented on
  [ $monitor ] && herbstclient focus_monitor $monitor

  movie=$(cat $catlg |
          sed "1i$(options)" |
          rofi 'Movie' "$movie" -no-custom) || exit

  [ "$movie" = "$LAST" ] && movie=$(grep '[^ ]' $playlist | head -1)

  case $movie in
    "$NAME") unset T
             continue ;;

    "$DATE") T=t
             continue ;;

    *) movie=$(echo "$movie" | sed "s/ $SEP$//")
       while :
       do
         action=$(echo "play\nmrqe\nimdb\nmanage\ndelete\nmark$debug" | rofi "$movie" -no-custom) || break
         video=$(find $library -maxdepth 1 -regex ".*$(echo "$movie" | sed -e 's/  (\([12][0-9][0-9][0-9]\))$/ \1/' -e 's/ /./g').*")
         case $action in
           play) if [ $(echo "$video" | wc -l) -gt 1 ] ;then
                   notify critical "$movie" "Duplicate movie files found"
                   term 'movies' WAIT ranger "$video" || term 'movies' WAIT ranger $library
                 fi
                 history $playlist "$movie"
                 catlg
                 play "$video" "$movie"
                 break ;;

           mrqe) vimb "mr $movie" ;;
           imdb) vimb "im $movie" ;;

           manage) term 'movies' WAIT ranger "$video" || term 'movies' WAIT ranger $library
                   catlg
                   break ;;

           delete) rm -rf "$video"
                   catlg
                   break ;;

           mark) history $playlist "$movie"
                 catlg
                 break ;;

           exit) exit ;;
         esac
       done ;;
  esac
done

# vim: set ft=sh: #
