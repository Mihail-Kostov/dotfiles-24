# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# .................................................................. Alarm clock

# Usage: dmenu alarm (interactive mode)
#        dmenu alarm <duration> <description>
#        dmenu alarm <duration> <description> <repetitions>
#
# Note:  duration defaults to minutes (not seconds)

# non-numeric character escapes undesired dmenu match
duration() {
  echo $1 | sed -re 's/^[^0-9]//' -e 's/([0-9])$/\1m/'
}

case $# in
  1) delay=$(duration $1)
     alert=$(echo $delay | sed -re 's/(.*)s/\1 seconds/' -e 's/(.*)m/\1 minutes/')
     repeat=1 ;;

  2) delay=$(duration $1)
     alert=$2
     repeat=1 ;;

  3) delay=$(duration $1)
     alert=$2
     repeat=$3 ;;

  *) while delay=$(echo | dmenu 'Duration [m]/s') || exit
     do
       if [ $delay ] ;then
         if echo $delay | grep -q '^[0-9]*[ms]*$' ;then
           delay=$(duration $delay)
           break
         fi
       fi
     done
     while alert=$(echo | history alarm | dmenu 'Notification') || exit
     do
       if [ "$alert" ] ;then
         history alarm "$alert"
         break
       fi
     done
     repeat=$(echo '1' | dmenu 'Repetitions') || exit ;;
esac

[ $repeat -gt 1 ] && notify "$alert" "$delay x $repeat" \
                  || notify "$alert" "$delay"

alarm() {
  for i in $(seq 1 $repeat)
  do
    sleep $delay
    if [ $repeat -gt 1 ] ;then
      [ $(( $repeat - $i )) -gt 0 ] && time=0 notify "($i/$repeat)  $alert" \
                                    || time=0 notify "($i/$repeat)  $alert" 'Finished!'
    else
      time=0 notify "$alert"
    fi
    paplay $HOME/music/sonar-ping.wav &
  done
}

# if invoked from command line..
alarm &

# vim: set ft=sh: #
