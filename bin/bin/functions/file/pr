#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# File
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ........................................................................ Print
set -x
usage() {
  echo "usage: [proof=true]  $(basename $0)  eject | stdin | code | mail | text | wiki | wps  [<filelist>]"
  exit 1
}

# unset for direct printing, set for proofing and latex debugging
# proof=true
[ -e $HOME/.proof ] && proof=true

# text defaults
fontsize=9
linenumbers='\linenumbers'
spacing='\singlespacing'
fold=80

# ............................................................... Latex preamble

format() {
  # set title dependent on source, ignore stdin
  if ! [ "$title" ] ;then
    if echo "$1" | grep -qv '^/tmp/tmp\.[^ ]*$' ;then
      unset pwd
      case "$PWD" in
        */.config*) pwd=".config/${PWD#*/.config}" ;;
        */.vim*)    pwd=".vim/${PWD#*/.vim}" ;;
        */bin/bin*) pwd="${PWD#*/bin/bin/}" ;;
        */bin*)     pwd="${PWD#*/bin/}" ;;
        */build*)   pwd="${PWD#*/build/}" ;;
        */vimwiki*) ;;
        *)          pwd="$PWD" ;;
      esac
      [ $pwd ] && title="$pwd/$1" || title="${1%.wiki}"
    fi
  fi
  # must escape certain character, a fancyhdr limitation(?)
  [ "$title" ] && title=$(echo $title | sed -r 's/([_#])/\\\1/g')

  (cat <<EOF
\documentclass[]{article}
\usepackage{etoolbox}
\usepackage{fp}
\usepackage{fancyhdr}
\usepackage{fontspec}
\usepackage{geometry}
\usepackage{lineno}
\usepackage{setspace}
\pagestyle{fancy}
\FPadd\hdrsize{$fontsize}{\ifnumgreater{$fontsize}{7}{-1}{0}}
% bold header
% \newcommand{\hdrfont}{\bfseries\fontsize{\hdrsize}{\hdrsize}\selectfont}%
\newcommand{\hdrfont}{\fontsize{\hdrsize}{\hdrsize}\selectfont}%
\fancyhf{}
% lighten header underline (0 to turn off)
\renewcommand{\headrulewidth}{0.1pt}
\fancyhead[L]{\hdrfont{\ifstrempty{$time}{\today}{$time}}}
\fancyhead[C]{\hdrfont{$title}}
\fancyhead[R]{\hdrfont{\thepage}}
\setmainfont[]{PragmataPro}
\renewcommand\linenumberfont{\selectfont}%
\setlength\linenumbersep{1em}
$linenumbers
$spacing
\geometry{letterpaper,left=100pt,top=75pt,right=50pt,bottom=50pt}
\makeatletter
\newcommand{\verbatimfont}[1]{\def\verbatim@font{#1}}%
\makeatother
\begin{document}
\verbatimfont{\PragmataPro}
\normalfont\fontsize{$fontsize}{$fontsize}\selectfont
\begin{verbatim}
% need to inject a blank line before cat to preserve top of file!
% warning: source file injection with latex file will terminate on \end{verbatim} statement

$(cat "$1")
\end{verbatim}
\end{document}
EOF
  ) | xelatex -jobname="${1#/tmp/}" -output-directory=/tmp >/tmp/pr.log
}

# .............................................................. Mail formatting

filter() {
  # reduce mail header to essential contact information
  # escape any special characters that trip latex up
  sed -nr '/^(Date|From|To|Cc|Subject): /,$p' | \
  pcregrep -vM 'X-SG-EID: (\n|.)*?[=]' | \
  egrep -vEi '^(Accept-Language|authentication-results|Content-.*|Importance|In-Reply-To|List-.*|Message-ID|MIME-Version|received-spf|References|Reply-To|Return-Path|Sender|Thread-Topic|User-Agent|Thread-Index|X-.*|Tags):' | \
  egrep -vE '^ *(boundary=".*"|charset=.*|(dkim|spf|dmarc)=pass .*|\(UTC\)|\[[0-9]*\] (https*|mailto):.*)$' | \
  sed 's/[&]/\\&/g'
}

header() {
  title=$(grep -m 1 '^Subject:' $stdin \
        | cut -d' ' -f2- \
        | sed -re 's/^ *([Rr][Ee]:* )+//' \
              -e 's/^ *([Ff][Ww][Dd]*: )+//' \
              -e 's/(\[SPAM\])//')

  time=$(grep -m 1 '^Date:' $stdin \
       | cut -d' ' -f2-5)
  time=$(date -d "$time" +'%B %-d, %Y')
}

# ............................................................. UTF-8 conversion

# convert common utf-8 punctuation to ascii
ascii() {
  sed -e 's/\xe2\x80\x93/--/g' \
      -e "s/\xe2\x80\x99/'/g" \
      -e 's/\xe2\x80\x9c/"/g' \
      -e 's/\xe2\x80\x9d/"/g' \
      -e 's/\xe2\x80\xa6/.../g' \
      -e 's/\xe2\x80?/\n===== UTF-8 =====\n/g'
}

# ................................................................ Print options

print() {
  output="/tmp/${1#/tmp/}.pdf"
  rm -f "$output" 2>&1
  format "$1"
  if [ $proof ] ;then
    zathura "$output" 2>&1
  else
    notify "Printing" "$title"
    lpr -P $PRINTER "$output"
  fi
}

# lines from stdin are folded
stdin() {
  stdin=$(mktemp)
  # tr -cd '\11\12\15\40-\176' | fold -sw $fold >$stdin
  iconv -c -f utf-8 -t ascii | fold -sw $fold >$stdin
  # set (title, time) format values, see case mail below
  [ "$*" ] && $@
  print $stdin
  rm -f $stdin
  pr eject
}

case "$1" in
  h | '') usage ;;

  eject) # force last page ejection with hp (escape) reset code
         [ $proof ] || printf '\033E' | lpr -P $PRINTER
         exit ;;

  stdin) stdin ;;

  mail) # content is piped in from mail application, see alot
        fontsize=9
        spacing='\onehalfspacing'
        unset linenumbers
        filter | ascii | stdin header ;;

  text) fontsize=9
        spacing='\singlespacing'
        linenumbers='\linenumbers' ;;

  wiki) fontsize=10
        spacing='\doublespacing'
        unset linenumbers ;;

  wps) # word document saved as text file
       fontsize=9
       spacing='\doublespacing'
       unset linenumbers
       shift
       title="${1%.txt}"
       # remove document [annotation] and reformat paragraphs
       # contract spaces and leading annotation punctuation (paragraph)
       perl -pe 'BEGIN{undef $/;}s/\[[^]]*\]//smg' "$1" | \
       sed -r 's/^(\xe3\x80\x80)*/\n/' | \
       ascii | \
       sed -e 's/^\.*  *//' \
           -e 's/  */ /g' | \
       stdin ;;
      

  code | *) fontsize=8
            spacing='\onehalfspacing'
            linenumbers='\linenumbers'
            [ "$1" = code ] || noshift=true ;;
esac
[ $noshift ] || shift

# filenames may have blanks, hence, usage of while vs for i in $@
while [ $# -gt 0 ]
do
  # set date to file modification date
  time=$(date -r "$1" +'%B %-d, %Y')
  print "$1"
  shift
  unset title
done
pr eject

# vim: set ft=sh: #
