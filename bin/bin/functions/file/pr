#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# File
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ........................................................................ Print

usage() {
  echo "usage: [proof=true]  $(basename $0)  eject | stdin | code | mail | text | wiki  [<filelist>]"
  exit 1
}

# unset for direct printing, set for proofing and latex debugging
proof=true

# text defaults
fontsize=9
linenumbers='\linenumbers'
spacing='\singlespacing'
fold=80

# ............................................................... Latex preamble

format() {
  # set title, ignore stdin printing
  echo "$1" | grep -q '^/tmp/tmp\.[^ ]*$' || title="$1"
  # latex!
  (cat <<EOF
\documentclass[${fontsize}pt]{article}
\usepackage{fancyhdr}
\usepackage{fontspec}
\usepackage{geometry}
\usepackage{ifthen}
\usepackage{lineno}
\usepackage{setspace}
\pagestyle{fancy}
\fancyhf{}
\lhead{\ifthenelse{\equal{$time}{}}{\today}{$time}}
\chead{$title}
\rhead{\thepage}
\setmainfont[]{PragmataPro}
\renewcommand\linenumberfont{\selectfont\small}
\setlength\linenumbersep{1em}
$linenumbers
$spacing
\geometry{letterpaper,left=100pt,top=75pt,right=50pt,bottom=50pt}
\makeatletter
\newcommand{\verbatimfont}[1]{\def\verbatim@font{#1}}%
\makeatother
\begin{document}
\verbatimfont{\PragmataPro}
\fontsize{${fontsize}pt}{${fontsize}pt}\selectfont
\begin{verbatim}
% need to inject a blank line to preserve top of file!

$(cat "$1")
\end{verbatim}
\end{document}
EOF
  ) | xelatex -jobname="${1#/tmp/}" -output-directory=/tmp >/tmp/pr.log
}

# ............................................................... Mail functions

filter() {
  # reduce mail header to essential contact information
  sed -nr '/^(Date|From|To|Cc|Subject): /,$p' | \
  pcregrep -vM 'X-SG-EID: (\n|.)*?[=]' | \
  egrep -vEi '^(Accept-Language|authentication-results|Content-.*|Importance|In-Reply-To|List-.*|Message-ID|MIME-Version|received-spf|References|Reply-To|Return-Path|Sender|Thread-Topic|User-Agent|Thread-Index|X-.*|Tags):' | \
  egrep -vE '^ *(boundary=".*"|charset=.*|(dkim|spf|dmarc)=pass .*|\(UTC\)|\[[0-9]*\] (https*|mailto):.*)$'
}

header() {
  title=$(grep -m 1 '^Subject:' $stdin \
        | cut -d' ' -f2- \
        | sed -re 's/^ *([Rr][Ee]: )+//' \
              -e 's/^ *([Ff][Ww][Dd]*: )+//' \
              -e 's/(\[SPAM\])//')

  time=$(grep -m 1 '^Date:' $stdin \
       | cut -d' ' -f2-5)
  time=$(date -d "$time" +'%B %-d, %Y')
}

# ................................................................ Print options

print() {
  format "$1"
  if [ $proof ] ;then
    zathura "/tmp/${1#/tmp/}.pdf" 2>&1
  else
    notify "Printing" "$t'itle"
    lpr -P $PRINTER "/tmp/${1#/tmp/}.pdf"
  fi
}

# lines from stdin are folded
stdin() {
  stdin=$(mktemp)
  iconv -c -f utf-8 -t ascii | fold -sw $fold >$stdin
  # set (title, time) format values, see case mail below
  [ "$*" ] && $@
  print $stdin
  rm -f $stdin
  pr eject
}

case "$1" in
  h | '') usage ;;

  eject) # force last page ejection with hp (escape) reset code
         [ $proof ] || printf '\033E' | lpr -P $PRINTER
         exit ;;

  stdin) stdin ;;

  mail) # content is piped in from mail application, see alot
        fontsize=9
        spacing='\onehalfspacing'
        unset linenumbers
        filter | stdin header ;;

  text) fontsize=9
        spacing='\singlespacing'
        linenumbers='\linenumbers' ;;

  wiki) fontsize=11
        spacing='\doublespacing'
        unset linenumbers ;;

  code | *) fontsize=9
            spacing='\onehalfspacing'
            linenumbers='\linenumbers'
            [ "$1" = code ] || noshift=true ;;
esac
[ $noshift ] || shift

# process filelist
while [ $# -gt 0 ]
do
  # filenames may have blanks, hence, usage of while vs for i in $@
  print "$1"
  shift
done
pr eject

# vim: set ft=sh: #
