#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# X11 Desktop
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ${_colors_} defined in env

# ..................................................................... Notifier

usage() {
  echo "usage: $(basename $0) [time=<seconds> | <seconds> | console | cron | low | normal | critical]* \"<summary>\" [\"<body>\"]"
  exit 1
}

# enable cron notifications, see .xinitrc
if [ -r $HOME/.dbus/Xdbus ]; then
  . $HOME/.dbus/Xdbus
fi

while :
do
  case $1 in
    # long form required for handling numeric summary field
    time=*                 ) expire="--expire-time=$(( ${1#time=} * 1000 ))" ;;
    console                ) console=true ;;
    cron                   ) cron=true ;;
    low | normal | critical) urgency="-u $1" ;;

    *) case $1 in
         # none numeric field
         '' | *[!0-9]*) break ;;
         *            ) expire="--expire-time=$(( $1 * 1000 ))" ;;
       esac
  esac
  shift
done

ONE=${1#\\}
TWO=${2#\\}
echo "$(timestamp) $USER:${urgency#-u} \"$ONE\" \"$TWO\"" >>/tmp/notify.log

if [ $console ] ;then
  [ "$TWO" ] && echo "${_YELLOW_}-> $ONE\n${_CYAN_} -> $TWO${_nocolor_}" ||
            echo "${_YELLOW_}-> $ONE${_nocolor_}"
else
  # allow cron jobs to bypass console test and display to X
  [ $cron ] || { console && return; }
  case $# in
    1) if [ $(echo "$ONE" | wc -l) -eq 1 ] ;then
         DISPLAY=:0 notify-send $expire $urgency --icon=help-info "$ONE" &
       else
         # set first line as heading for a single multiline message
         heading=$(echo "$ONE" | sed '2,$d')
         body=$(echo "$ONE" | sed '1d')
         DISPLAY=:0 notify-send $expire $urgency --icon=help-info "$heading" "$body" &
       fi ;;

    2) DISPLAY=:0 notify-send $expire $urgency --icon=help-info "$ONE" "$TWO" & ;;
    *) usage ;;
  esac
fi

# vim: set ft=sh: #
