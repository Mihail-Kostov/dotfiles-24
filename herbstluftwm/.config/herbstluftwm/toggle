#!/usr/bin/dash
[ $TRACE ] && CHILD="toggle $@" . $PARENT

# herbstluftwm
# ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬

# ............................................................ Toggle operations

# Usage: toggle [msg | term msg], see functions/toggle
#        toggle msg, start/stop visible app or raise app to current desktop
#        toggle term msg, start/stop visible terminal app or goto terminal desktop (tag)

# close by winid
close() {
  tag=$(herbstclient attr clients.$1.tag)
  # kill instance if already visible
  [ $tag -ne $(query tag) ] && [ $tag -ne $(query tag inactive) ] && return 1
  herbstclient close $1
  # clear panel title as required
  focus window
  return 0
}

# special term processing toggles on unique title
toggle_term() {
  if xdotool search --limit 1 --classname "$1" >/dev/null ;then
    for i in $(query winids)
    do
      if herbstclient compare clients.$i.instance = $1 ;then
        if ! close $i ;then
          # goto desktop
          herbstclient use $tag
          herbstclient focus $i
        fi
        break
      fi
    done
  else
    # see term (urxvt)
    $msg $@
  fi
}

# toggle application, note exceptions where startup binary and instance names differ
toggle_app() {
  # handle rox filer binary name
  [ "$msg" = 'rox' ] && app='ROX-Filer'
  if pgrep -lf "${app:-$msg}" | grep -qv 'toggle' ;then
    app=${app:-$msg}
    touch $LOCK
    herbstclient lock
    focus=true
    for i in $(query winids)
    do
      if herbstclient compare clients.$i.instance = "$app" ;then
        if ! close $i ;then
          # stack windows
          [ $focus ] && focus frame
          unset focus
          herbstclient bring $i
        fi
        # manage multiple instances of rox
        [ "$msg" = 'rox' ] || break
      fi
    done
    herbstclient unlock
    rm -f $LOCK
  else
    # new instance
    focus frame
    $msg $@ &
  fi
}

msg=$1
shift
if [ -e ${0%/toggle}/functions/toggle/$msg ] ;then
  . ${0%/toggle}/functions/toggle/$msg $@
elif [ $msg = term ] ;then
  toggle_term $@
elif which $msg ;then
  toggle_app
else
  usage $0
fi
herbstclient emit_hook focus_changed

# vim: set ft=sh: #
