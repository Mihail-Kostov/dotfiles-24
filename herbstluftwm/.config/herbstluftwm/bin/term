#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl
[ $TRACE ] && CHILD="bin/term $@" . $PARENT

# herbstluftwm
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ..................................................................... Terminal

# Usage: term [<title>] [ FLOAT | STACK | MAX | VERTICAL | HORIZONTAL | GRID| TABBED | BG <colour> | BLACKBOARD | TR | VISIBLE | WAIT | FORTUNE | MENU ] [[SHELL] <command>]
#        title (and default name string)
#        FLOAT, STACK, MAX, VERTICAL, HORIZONTAL, GRID herbstluftwm hooks for setting layout and geometry
#        FORTUNE, login notifier message
#        BG <colour>, colour is #hex
#        BLACKBOARD, cinema background mode for omxplayer
#        TR, enable urxvt pseudo transparency
#        VISIBLE, wait for window visibility
#        WAIT, for process to complete before returning
#        SHELL <command>, for simpler unquoted command passing
# Note:  title may not contain spaces, use hyphen or underscore in place

SHELL=/usr/bin/dash
TERM=urxvt
blackboard='#000000'

# first parameter may be title
if [ "$1" ] ;then
  if echo $1 | egrep -qv 'FLOAT|STACK|MAX|VERTICAL|HORIZONTAL|GRID|TABBED|BG|BLACKBOARD|TR|VISIBLE|WAIT|FORTUNE|MENU|SHELL' ;then
    title="-title $(echo $1 | sed 's/ /_/g')"
    shift
  fi
fi

# menu border calculation
border() { echo $(( $(query displayheight) * 2 / 15 )); }

while [ "$1" ]
do
  case $1 in
    FLOAT     ) name='-name float'
                geometry='-geometry 1024x600+0+0'
                shift ;;

    STACK     ) stack=true;                                                   shift ;;
    MAX       ) name='-name max';                                             shift ;;
    VERTICAL  ) name='-name vertical'--smart-case;                            shift ;;
    HORIZONTAL) name='-name horizontal';                                      shift ;;
    GRID      ) name='-name grid';                                            shift ;;
    TABBED    ) tabbed='-pe tabbed';                                          shift ;;
    BG        ) attr="-bg $2";                                                shift 2 ;;
    BLACKBOARD) attr="-bg '$blackboard' -fg '$blackboard' -cr '$blackboard'"; shift ;;
    TR        ) tr='-tr';                                                     shift ;;
    VISIBLE   ) visible=true;                                                 shift ;;
    WAIT      ) wait=true;                                                    shift ;;
    FORTUNE   ) touch $FORTUNE:term;                                          shift ;;

    MENU      ) name="-name menu"
                stack=true
                size=$(( $(fontsize) + 4 ))
                attr="$attr -b $(border) -sh 80 -fn xft:$MONOFONT:size=$size -lsp $(( $size / 4 * 3 ))"
                shift ;;

    SHELL     ) shift
                process=$@
                [ "$1" ] && cmd="-e $SHELL -c '$@'"
                break ;;

    *         ) process="$@"
                cmd="-e $@"
                break ;;
  esac
done

if [ -z "$name" ] ;then
  [ "$title" ] && name="-name ${title#* }"
fi

if [ $stack ] ;then
  $TERM $title $name $geometry $tabbed $attr $tr $cmd
else
  focus $TERM $title $name $geometry $tabbed $attr $tr $cmd
fi

if [ $visible ] && [ "$title" ] ;then
  xdotool search --sync --onlyvisible --limit 1 --classname "${title#* }"
fi

if [ $wait ] ;then
  pwait "$process"
fi

# vim: set ft=sh: #
